[{"/home/ss0026/ashish/R&D/techno-chat/src/index.tsx":"1","/home/ss0026/ashish/R&D/techno-chat/src/serviceWorker.ts":"2","/home/ss0026/ashish/R&D/techno-chat/src/reportWebVitals.ts":"3","/home/ss0026/ashish/R&D/techno-chat/src/App.tsx":"4"},{"size":578,"mtime":1612091272111,"results":"5","hashOfConfig":"6"},{"size":5074,"mtime":1612091250631,"results":"7","hashOfConfig":"6"},{"size":425,"mtime":1612090808066,"results":"8","hashOfConfig":"6"},{"size":3451,"mtime":1612101118703,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"hvhesv",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},"/home/ss0026/ashish/R&D/techno-chat/src/index.tsx",[],["20","21"],"/home/ss0026/ashish/R&D/techno-chat/src/serviceWorker.ts",[],"/home/ss0026/ashish/R&D/techno-chat/src/reportWebVitals.ts",[],"/home/ss0026/ashish/R&D/techno-chat/src/App.tsx",["22","23"],"import React, { useRef, useState } from 'react';\nimport './App.css';\n\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nimport 'firebase/analytics';\n\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\n\nif (!firebase.apps.length) {\n  firebase.initializeApp({\n    apiKey: 'AIzaSyA7xh6VssDUaonvlNGREd64c8-IDttCRtY',\n    authDomain: 'techno-chat-94200.firebaseapp.com',\n    databaseURL: 'https://techno-chat-94200-default-rtdb.firebaseio.com',\n    projectId: 'techno-chat-94200',\n    storageBucket: 'techno-chat-94200.appspot.com',\n    messagingSenderId: '1010816202698',\n    appId: '1:1010816202698:web:2864657c285c5310d30133',\n    measurementId: 'G-492W2HLXSQ',\n  });\n} else {\n  firebase.app(); // if already initialized, use that one\n}\n\nconst auth = firebase.auth();\nconst firestore = firebase.firestore();\nconst analytics = firebase.analytics();\n\nfunction App() {\n  const [user] = useAuthState(auth);\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Techno Chat</h1>\n        <SignOut />\n      </header>\n\n      <section>{user ? <ChatRoom /> : <SignIn />}</section>\n    </div>\n  );\n}\n\nfunction SignIn() {\n  const signInWithGoogle = () => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    auth.signInWithPopup(provider);\n  };\n\n  return (\n    <>\n      <button className=\"sign-in\" onClick={signInWithGoogle}>\n        Sign in with Google\n      </button>\n    </>\n  );\n}\n\nfunction SignOut() {\n  return (\n    auth.currentUser && (\n      <button className=\"sign-out\" onClick={() => auth.signOut()}>\n        Sign Out\n      </button>\n    )\n  );\n}\n\nfunction ChatRoom() {\n  const dummy: any = useRef();\n  const messagesRef = firestore.collection('messages');\n  const query = messagesRef.orderBy('createdAt').limit(25);\n\n  const [messages] = useCollectionData(query, { idField: 'id' });\n\n  const [formValue, setFormValue] = useState('');\n\n  const sendMessage = async (e: { preventDefault: () => void }) => {\n    e.preventDefault();\n\n    const { uid, photoURL, displayName } = auth.currentUser as any;\n\n    await messagesRef.add({\n      text: formValue,\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n      uid,\n      photoURL,\n      displayName,\n    });\n\n    setFormValue('');\n    dummy?.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  return (\n    <>\n      <main>\n        {messages &&\n          messages.map((msg: any) => (\n            <ChatMessage key={msg.id} message={msg} />\n          ))}\n\n        <span ref={dummy}></span>\n      </main>\n\n      <form onSubmit={sendMessage}>\n        <input\n          value={formValue}\n          onChange={(e) => setFormValue(e.target.value)}\n          placeholder=\"say something nice\"\n        />\n\n        <button type=\"submit\" disabled={!formValue}>\n          üïäÔ∏è\n        </button>\n      </form>\n    </>\n  );\n}\n\nfunction ChatMessage(props: {\n  message: { text: any; uid: any; photoURL: any; displayName: any };\n}) {\n  const { text, uid, photoURL, displayName } = props.message;\n\n  const messageClass = uid === auth?.currentUser?.uid ? 'sent' : 'received';\n\n  return (\n    <>\n      <div className={`message ${messageClass}`} title={displayName}>\n        <img\n          src={\n            photoURL || 'https://api.adorable.io/avatars/23/abott@adorable.png'\n          }\n        />\n        <p>{text}</p>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n",{"ruleId":"24","replacedBy":"25"},{"ruleId":"26","replacedBy":"27"},{"ruleId":"28","severity":1,"message":"29","line":29,"column":7,"nodeType":"30","messageId":"31","endLine":29,"endColumn":16},{"ruleId":"32","severity":1,"message":"33","line":133,"column":9,"nodeType":"34","endLine":137,"endColumn":11},"no-native-reassign",["35"],"no-negated-in-lhs",["36"],"@typescript-eslint/no-unused-vars","'analytics' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]